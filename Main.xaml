<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p5="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p6="http://schemas.uipath.com/workflow/activities/documentunderstanding-ml" xmlns:p7="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p8="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uiaam="clr-namespace:UiPath.IntelligentOCR.Activities.Actions.Model;assembly=UiPath.IntelligentOCR.Activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="strInvoiceFolderPath" Type="InArgument(x:String)" />
  </x:Members>
  <this:Main.strInvoiceFolderPath>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.strInvoiceFolderPath>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1104,801.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="51">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities.Editors</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Actions.Model</x:String>
      <x:String>UiPath.IntelligentOCR.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="26">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Main Flowchart" sap:VirtualizedContainerService.HintSize="633.6,636.8" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="strInvoiceFolderPath" />
      <Variable x:TypeArguments="x:Boolean" Name="boolInvoiceFolder" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,115.6</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID3</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,115.6</av:Point>
          <av:Size x:Key="ShapeSize">200,68.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,184.4 300,234.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Importing Assets " sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Document Understanding - Input Invoice Folder Path" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="443.2,139.2" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
          <ui:GetRobotAsset.Value>
            <OutArgument x:TypeArguments="x:String">[strInvoiceFolderPath]</OutArgument>
          </ui:GetRobotAsset.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:GetRobotAsset>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,234.4</av:Point>
              <av:Size x:Key="ShapeSize">200,68.8</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,303.2 300,333.2 300.241666666667,333.2 300.241666666667,353.2</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Check Input Folder" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="intInvoiceCount" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="794.4,99.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:Int32">[intInvoiceCount]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:Int32">[Directory.GetFiles(strInvoiceFolderPath).Count()]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <If Condition="[intInvoiceCount &lt;&gt; 0]" sap:VirtualizedContainerService.HintSize="794.4,435.2" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="375.2,285.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[boolInvoiceFolder]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Folder is not empty&quot;]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="375.2,285.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[boolInvoiceFolder]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Folder is empty&quot;]" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID1" Condition="[boolInvoiceFolder]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">260.641666666667,353.2</av:Point>
                  <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
                  <av:PointCollection x:Key="TrueConnector">260.641666666667,396.8 230.641666666667,396.8 230.641666666667,490 200,490</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">0,455.6</av:Point>
                      <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Invoice Processing" sap:VirtualizedContainerService.HintSize="1112.8,5384" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="s:String[]" Name="arrDocumentPath" />
                      <Variable x:TypeArguments="x:String" Name="outputDocText" />
                      <Variable x:TypeArguments="p3:Document" Name="outputDOM" />
                      <Variable x:TypeArguments="ss:SecureString" Name="GetAPIKey" />
                      <Variable x:TypeArguments="p8:DocumentTaxonomy" Name="outputTaxonomy" />
                      <Variable x:TypeArguments="s:Exception" Name="ValidationException" />
                      <Variable x:TypeArguments="p4:ClassificationResult[]" Name="outputClassificationResults" />
                      <Variable x:TypeArguments="p4:ExtractionResult" Name="outputExtractionResults" />
                      <Variable x:TypeArguments="x:Boolean" Name="boolRequireManualClassification" />
                      <Variable x:TypeArguments="uiaam:DocumentClassificationActionData" Name="opCreateDocClassificationAction" />
                      <Variable x:TypeArguments="x:String" Name="Temp" />
                      <Variable x:TypeArguments="p4:ClassificationResult[]" Name="opValidatedClassificationResult" />
                      <Variable x:TypeArguments="p4:ClassificationResult[]" Name="opAutomaticClassificationResult" />
                      <Variable x:TypeArguments="x:String" Name="opClassifiedDocItem" />
                      <Variable x:TypeArguments="x:String" Name="ClassificationException" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="Document Understanding - API Key" DisplayName="Get API Key" sap:VirtualizedContainerService.HintSize="1071.2,22.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[GetAPIKey]" />
                    <Assign sap:VirtualizedContainerService.HintSize="1071.2,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">[arrDocumentPath]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(strInvoiceFolderPath)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="1071.2,105.6" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[outputTaxonomy]" />
                    <ParallelForEach x:TypeArguments="x:String" DisplayName="Parallel For Each" sap:VirtualizedContainerService.HintSize="1071.2,4983.2" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_2" Values="[arrDocumentPath]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="docItem" />
                        </ActivityAction.Argument>
                        <Sequence sap:VirtualizedContainerService.HintSize="1021.6,4834.4" sap2010:WorkflowViewState.IdRef="Sequence_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Sequence - Processing" sap:VirtualizedContainerService.HintSize="980,3984" sap2010:WorkflowViewState.IdRef="Sequence_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="938.4,130.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="s:Exception">[ValidationException]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[boolRequireManualClassification]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                            <ui:CommentOut DisplayName="Commented out msg box" sap:VirtualizedContainerService.HintSize="938.4,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="375.2,152.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[Temp]" />
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <p:DigitizeDocument DegreeOfParallelism="-1" DisplayName="Digitize Document" DocumentObjectModel="[outputDOM]" DocumentPath="[docItem]" DocumentText="[outputDocText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="938.4,297.6" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
                              <p:DigitizeDocument.OCREngine>
                                <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                  <ActivityFunc.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                  </ActivityFunc.Argument>
                                  <uoa:OmniPageOCR Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" BundleType="Basic" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,22.4" sap2010:WorkflowViewState.IdRef="OmniPageOCR_1" Image="[Image]" />
                                </ActivityFunc>
                              </p:DigitizeDocument.OCREngine>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p:DigitizeDocument>
                            <p1:ClassifyDocumentScope ClassificationResults="[outputClassificationResults]" DisplayName="Classify Document Scope" DocumentObjectModel="[outputDOM]" DocumentPath="[docItem]" DocumentText="[outputDocText]" sap:VirtualizedContainerService.HintSize="938.4,539.2" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[outputTaxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI2e5dae248bee4924aa33bf0e13b80bfc&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;InvoProcessing.Invoices.Invoice&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;InvoProcessing.Invoices.Invoice&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI2e5dae248bee4924aa33bf0e13b80bfc&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI2e5dae248bee4924aa33bf0e13b80bfc&quot;:[]}}">
                              <p1:ClassifyDocumentScope.Classifiers>
                                <p1:IntelligentKeywordClassifier LearningData="{x:Null}" ApiKey="[(New System.Net.NetworkCredential(&quot;&quot;,GetAPIKey)).Password]" DisplayName="Intelligent Keyword Classifier" Endpoint="https://du.uipath.com/svc/intelligentkeywords" sap:VirtualizedContainerService.HintSize="233.6,212.8" sap2010:WorkflowViewState.IdRef="IntelligentKeywordClassifier_1" LearningFilePath="DocumentProcessing\DocClassifier\ClassifierJSON.json" PersistenceId="UI2e5dae248bee4924aa33bf0e13b80bfc">
                                  <p1:IntelligentKeywordClassifier.ClassifierResult>
                                    <OutArgument x:TypeArguments="p2:ClassifierResult">
                                      <DelegateArgumentReference x:TypeArguments="p2:ClassifierResult">
                                        <DelegateOutArgument x:TypeArguments="p2:ClassifierResult" Name="ClassificationResult" />
                                      </DelegateArgumentReference>
                                    </OutArgument>
                                  </p1:IntelligentKeywordClassifier.ClassifierResult>
                                  <p1:IntelligentKeywordClassifier.DocumentObjectModel>
                                    <InArgument x:TypeArguments="p3:Document">
                                      <DelegateArgumentValue x:TypeArguments="p3:Document">
                                        <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p1:IntelligentKeywordClassifier.DocumentObjectModel>
                                  <p1:IntelligentKeywordClassifier.DocumentPath>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p1:IntelligentKeywordClassifier.DocumentPath>
                                  <p1:IntelligentKeywordClassifier.DocumentText>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p1:IntelligentKeywordClassifier.DocumentText>
                                  <p1:IntelligentKeywordClassifier.DocumentTypes>
                                    <InArgument x:TypeArguments="p2:ClassifierDocumentType[]">
                                      <DelegateArgumentValue x:TypeArguments="p2:ClassifierDocumentType[]">
                                        <DelegateInArgument x:TypeArguments="p2:ClassifierDocumentType[]" Name="DocumentTypes" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p1:IntelligentKeywordClassifier.DocumentTypes>
                                </p1:IntelligentKeywordClassifier>
                              </p1:ClassifyDocumentScope.Classifiers>
                            </p1:ClassifyDocumentScope>
                            <ui:ForEach x:TypeArguments="p4:ClassificationResult" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Since it runs in multi-threading, it will always run for first index as the array contains only one value." DisplayName="For Each" sap:VirtualizedContainerService.HintSize="938.4,676" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[outputClassificationResults]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="p4:ClassificationResult">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="p4:ClassificationResult" Name="classifiedFile" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Check confidence of File" sap:VirtualizedContainerService.HintSize="524.8,497.6" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="483.2,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;File Confidece of is : &quot; + classifiedFile.Confidence.ToString]" />
                                    <If Condition="[classifiedFile.Confidence &lt; 0.7]" sap:VirtualizedContainerService.HintSize="483.2,302.4" sap2010:WorkflowViewState.IdRef="If_3">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[boolRequireManualClassification]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEach>
                            <If Condition="[boolRequireManualClassification]" sap:VirtualizedContainerService.HintSize="938.4,1042.4" sap2010:WorkflowViewState.IdRef="If_4">
                              <If.Then>
                                <Sequence DisplayName="Sequence - Manual Classification" sap:VirtualizedContainerService.HintSize="519.2,892.8" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <p:CreateDocumentClassificationAction FolderPath="{x:Null}" TimeoutMs="{x:Null}" ActionCatalog="[&quot;Classification Verification&quot;]" ActionOutput="[opCreateDocClassificationAction]" ActionPriority="Medium" ActionTitle="[&quot;Verify Classification for :&quot; + Path.GetFileName(docItem).ToString]" AutomaticClassificationResults="[outputClassificationResults]" BucketFolderPath="DU Path" BucketName="Document Understanding -Validation" DisplayName="Create Document Classification Action" DocumentObjectModel="[outputDOM]" DocumentPath="[docItem]" DocumentText="[outputDocText]" sap:VirtualizedContainerService.HintSize="477.6,372" sap2010:WorkflowViewState.IdRef="CreateDocumentClassificationAction_1" Taxonomy="[outputTaxonomy]" />
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="477.6,388" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                    <TryCatch.Try>
                                      <Sequence sap:VirtualizedContainerService.HintSize="519.2,457.6" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <p:WaitForDocumentClassificationActionAndResume ActionOutput="{x:Null}" StatusMessage="{x:Null}" TimeoutMs="{x:Null}" WaitItemDataObject="{x:Null}" ActionInput="[opCreateDocClassificationAction]" AutomaticClassificationResults="[opAutomaticClassificationResult]" DisplayName="Wait For Document Classification Action And Resume" DocumentObjectModel="[outputDOM]" DocumentPath="[opClassifiedDocItem]" DocumentText="[outputDocText]" DownloadFolderPath="C:\Users\Abhishek\Documents\UiPath\DocumentUnderstanding_OrchestrationProcess\Validation - Classification Files" sap:VirtualizedContainerService.HintSize="477.6,364.8" sap2010:WorkflowViewState.IdRef="WaitForDocumentClassificationActionAndResume_1" RemoveDataFromStorage="False" Taxonomy="[outputTaxonomy]" ValidatedClassificationResults="[opValidatedClassificationResult]" />
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,223.2" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[ClassificationException]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[exception.ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="375.2,223.2" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="333.6,130.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="p4:ClassificationResult[]">[opValidatedClassificationResult]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="p4:ClassificationResult[]">[outputClassificationResults]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[opClassifiedDocItem]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[docItem]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                </Sequence>
                              </If.Else>
                            </If>
                            <If Condition="[ClassificationException is Nothing]" sap:VirtualizedContainerService.HintSize="938.4,912.8" sap2010:WorkflowViewState.IdRef="If_5">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="568.8,763.2" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ParallelForEach x:TypeArguments="p4:ClassificationResult" DisplayName="Parallel For Each" sap:VirtualizedContainerService.HintSize="527.2,670.4" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_3" Values="[opValidatedClassificationResult]">
                                    <ActivityAction x:TypeArguments="p4:ClassificationResult">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="p4:ClassificationResult" Name="eachValidatedFile" />
                                      </ActivityAction.Argument>
                                      <p5:DataExtractionScope DocumentTypeId="{x:Null}" ClassificationResult="[eachValidatedFile]" DisplayName="Data Extraction Scope" DocumentObjectModel="[outputDOM]" DocumentPath="[opClassifiedDocItem]" DocumentText="[outputDocText]" ExtractionResult="[outputExtractionResults]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="477.6,521.6" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[outputTaxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIc01d9cbe34ed4891b66c30e31ddb8809&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;InvoProcessing.Invoices.Invoice&quot;:{&quot;FieldMappings&quot;:{&quot;InvoProcessing.Invoices.Invoice.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;InvoProcessing.Invoices.Invoice.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;invoice-no\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;InvoProcessing.Invoices.Invoice.InvoiceDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;InvoProcessing.Invoices.Invoice.InvoiceDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;InvoProcessing.Invoices.Invoice.InvoiceAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;InvoProcessing.Invoices.Invoice.InvoiceAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;billing-addr\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;InvoProcessing.Invoices.Invoice.InvoiceTotal&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;InvoProcessing.Invoices.Invoice.InvoiceTotal&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;total\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;InvoProcessing.Invoices.Invoice.InvoiceDescription&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;InvoProcessing.Invoices.Invoice.InvoiceDescription&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;items\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;InvoProcessing.Invoices.Invoice.InvoiceDescription.Description&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;InvoProcessing.Invoices.Invoice.InvoiceDescription.Description&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;description\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UIc01d9cbe34ed4891b66c30e31ddb8809&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UIc01d9cbe34ed4891b66c30e31ddb8809&quot;:[{&quot;FieldId&quot;:&quot;&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;shipping-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;invoice-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;po-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor-vat-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;tax&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;total&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;payment-terms&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;net-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;due-date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;discount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;shipping-charges&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;payment-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-vat-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;currency&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;items&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;description&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;quantity&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;unit-price&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;item-po-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;part-no&quot;,&quot;SubOptions&quot;:null}]}]}]}}">
                                        <p5:DataExtractionScope.Extractors>
                                          <p6:MachineLearningExtractor SelectedMLSkill="{x:Null}" ApiKey="[(New System.Net.NetworkCredential(&quot;&quot;,GetAPIKey)).Password]" Configuration="{}{&quot;Endpoint&quot;:&quot;https://du.uipath.com/ie/invoices&quot;,&quot;ApiKey&quot;:&quot;2iKzU9LDn7rl5TSEprdDUo/TkOL7kQZmFAD5PSRa24K56lM2OtIL8rqoBEZlqvDr1wd4XtoHzsUhQa1/ST5a5g==&quot;,&quot;AvailableMLSkills&quot;:[]}" DisplayName="Machine Learning Extractor" Endpoint="https://du.uipath.com/ie/invoices" sap:VirtualizedContainerService.HintSize="233.6,195.2" sap2010:WorkflowViewState.IdRef="MachineLearningExtractor_2" PersistenceId="UIc01d9cbe34ed4891b66c30e31ddb8809" RetryOnFailure="True" Timeout="100000" UseServerSideOCR="False">
                                            <p6:MachineLearningExtractor.AvailableMLSkills>
                                              <sc:BindingList x:TypeArguments="x:String" AllowEdit="True" AllowNew="False" AllowRemove="True" RaiseListChangedEvents="True" />
                                            </p6:MachineLearningExtractor.AvailableMLSkills>
                                            <p6:MachineLearningExtractor.DocumentBounds>
                                              <InArgument x:TypeArguments="p4:ResultsDocumentBounds">
                                                <DelegateArgumentValue x:TypeArguments="p4:ResultsDocumentBounds">
                                                  <DelegateInArgument x:TypeArguments="p4:ResultsDocumentBounds" Name="DocumentBounds" />
                                                </DelegateArgumentValue>
                                              </InArgument>
                                            </p6:MachineLearningExtractor.DocumentBounds>
                                            <p6:MachineLearningExtractor.DocumentObjectModel>
                                              <InArgument x:TypeArguments="p3:Document">
                                                <DelegateArgumentValue x:TypeArguments="p3:Document">
                                                  <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                                                </DelegateArgumentValue>
                                              </InArgument>
                                            </p6:MachineLearningExtractor.DocumentObjectModel>
                                            <p6:MachineLearningExtractor.DocumentPath>
                                              <InArgument x:TypeArguments="x:String">
                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                </DelegateArgumentValue>
                                              </InArgument>
                                            </p6:MachineLearningExtractor.DocumentPath>
                                            <p6:MachineLearningExtractor.DocumentText>
                                              <InArgument x:TypeArguments="x:String">
                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                </DelegateArgumentValue>
                                              </InArgument>
                                            </p6:MachineLearningExtractor.DocumentText>
                                            <p6:MachineLearningExtractor.ExtractorDocumentType>
                                              <InArgument x:TypeArguments="p7:ExtractorDocumentType">
                                                <DelegateArgumentValue x:TypeArguments="p7:ExtractorDocumentType">
                                                  <DelegateInArgument x:TypeArguments="p7:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                </DelegateArgumentValue>
                                              </InArgument>
                                            </p6:MachineLearningExtractor.ExtractorDocumentType>
                                            <p6:MachineLearningExtractor.ExtractorResult>
                                              <OutArgument x:TypeArguments="p7:ExtractorResult">
                                                <DelegateArgumentReference x:TypeArguments="p7:ExtractorResult">
                                                  <DelegateOutArgument x:TypeArguments="p7:ExtractorResult" Name="ExtractorResult" />
                                                </DelegateArgumentReference>
                                              </OutArgument>
                                            </p6:MachineLearningExtractor.ExtractorResult>
                                          </p6:MachineLearningExtractor>
                                        </p5:DataExtractionScope.Extractors>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </p5:DataExtractionScope>
                                    </ActivityAction>
                                  </ParallelForEach>
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                          <Sequence DisplayName="Sequence - Validation" sap:VirtualizedContainerService.HintSize="980,624.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd1:DataSet" Name="ExtractionDataSet" />
                              <Variable x:TypeArguments="x:Boolean" Name="boolManualVerification" />
                              <Variable x:TypeArguments="x:String" Name="DTOutput" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p5:ExportExtractionResults DataSet="[ExtractionDataSet]" DisplayName="Export Extraction Results" ExtractionResult="[outputExtractionResults]" sap:VirtualizedContainerService.HintSize="333.6,176.8" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" IncludeOCRConfidence="False" />
                            <ui:OutputDataTable DataTable="[ExtractionDataSet.Tables(1)]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[DTOutput]" />
                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[DTOutput]" />
                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[boolManualVerification]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="714.4,1123.2" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ForEach x:TypeArguments="sd1:DataTable" CurrentIndex="{x:Null}" DisplayName="For Each DataTable in DataSet" sap:VirtualizedContainerService.HintSize="672.8,1030.4" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[ExtractionDataSet.Tables]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="sd1:DataTable">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd1:DataTable" Name="ExtractedDT" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="637.6,896" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ForEach x:TypeArguments="sd1:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each Column in DataTable" sap:VirtualizedContainerService.HintSize="596,803.2" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[ExtractedDT.Columns]">
                                            <ui:ForEach.Body>
                                              <ActivityAction x:TypeArguments="sd1:DataColumn">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="sd1:DataColumn" Name="DTColumn" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="560.8,668.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If Condition="[(DTColumn.ColumnName.Contains(&quot;- Confidence&quot;) Or DTColumn.ColumnName.Contains(&quot;- OCR Confidence&quot;)) And Not DTColumn.ColumnName.Contains(&quot;Line Items - OCR Confidence&quot;)]" DisplayName="Check for Confidence column" sap:VirtualizedContainerService.HintSize="519.2,576" sap2010:WorkflowViewState.IdRef="If_2">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If.Then>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="375.2,426.4" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[ExtractedDT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="333.6,233.6" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                                          <ui:ForEachRow.Body>
                                                            <ActivityAction x:TypeArguments="sd1:DataRow">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="row" />
                                                              </ActivityAction.Argument>
                                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </ActivityAction>
                                                          </ui:ForEachRow.Body>
                                                        </ui:ForEachRow>
                                                        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[&quot;Found&quot;]" />
                                                      </Sequence>
                                                    </If.Then>
                                                  </If>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ForEach.Body>
                                          </ui:ForEach>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEach>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                          </Sequence>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="980,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="271.2,155.2" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="Should create Buckets in ORchestrator now" />
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                        </Sequence>
                      </ActivityAction>
                    </ParallelForEach>
                  </Sequence>
                </FlowStep>
              </FlowDecision.True>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
  </Flowchart>
</Activity>